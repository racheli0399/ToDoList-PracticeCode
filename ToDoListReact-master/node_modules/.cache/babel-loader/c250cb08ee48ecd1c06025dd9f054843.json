{"ast":null,"code":"// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5110/\"\n\n// export default {\n//   getTasks: async () => {\n//     // const result = await axios.get(`${apiUrl}/items`)    \n//     const result = await axios.get(`${apiUrl}/tasks`);\n\n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n\nimport axios from \"axios\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5110/\"\n});\n\n// Interceptor לתפיסת שגיאות בתשובה\napiClient.interceptors.response.use(response => {\n  // החזרת התשובה כרגיל אם הכל תקין\n  return response;\n}, error => {\n  // רישום השגיאה בלוג\n  console.error(\"API Error:\", error.response || error.message);\n  // השלכת השגיאה מחדש כדי שנוכל לטפל בה גם בפונקציות\n  return Promise.reject(error);\n});\nexport default {\n  // שליפת כל המשימות\n  // getTasks: async () => {\n  //   try {\n  //     const result = await apiClient.get(\"tasks\"); // שימוש ב-apiClient במקום apiUrl\n  //     return result.data; // הנתונים מוחזרים מה-API\n  //   } catch (error) {\n  //     console.error(\"Error fetching tasks:\", error);\n  //     throw error;\n  //   }\n  // },\n\n  // הוספת משימה חדשה\n  addTask: async name => {\n    try {\n      const result = await apiClient.post(\"tasks\", {\n        name,\n        isComplete: false\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      throw error;\n    }\n  },\n  // עדכון סטטוס של משימה\n  setCompleted: async (id, isComplete) => {\n    try {\n      const result = await apiClient.put(`tasks/${id}`, {\n        isComplete\n      });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      throw error;\n    }\n  },\n  // מחיקת משימה\n  deleteTask: async id => {\n    try {\n      await apiClient.delete(`tasks/${id}`);\n      console.log(`Task ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","interceptors","response","use","error","console","message","Promise","reject","addTask","name","result","post","isComplete","data","setCompleted","id","put","deleteTask","delete","log"],"sources":["C:/Users/user/Desktop/תכנות/שנה ב/פראקטיקוד/פרוקיט 3/פרויקט/ToDoListReact-master/src/service.js"],"sourcesContent":["// import axios from 'axios';\n\n// const apiUrl = \"http://localhost:5110/\"\n\n// export default {\n//   getTasks: async () => {\n//     // const result = await axios.get(`${apiUrl}/items`)    \n//     const result = await axios.get(`${apiUrl}/tasks`);\n\n//     return result.data;\n//   },\n\n//   addTask: async(name)=>{\n//     console.log('addTask', name)\n//     //TODO\n//     return {};\n//   },\n\n//   setCompleted: async(id, isComplete)=>{\n//     console.log('setCompleted', {id, isComplete})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async()=>{\n//     console.log('deleteTask')\n//   }\n// };\n\nimport axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:5110/\",\n});\n\n// Interceptor לתפיסת שגיאות בתשובה\napiClient.interceptors.response.use(\n  (response) => {\n    // החזרת התשובה כרגיל אם הכל תקין\n    return response;\n  },\n  (error) => {\n    // רישום השגיאה בלוג\n    console.error(\"API Error:\", error.response || error.message);\n    // השלכת השגיאה מחדש כדי שנוכל לטפל בה גם בפונקציות\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  // שליפת כל המשימות\n  // getTasks: async () => {\n  //   try {\n  //     const result = await apiClient.get(\"tasks\"); // שימוש ב-apiClient במקום apiUrl\n  //     return result.data; // הנתונים מוחזרים מה-API\n  //   } catch (error) {\n  //     console.error(\"Error fetching tasks:\", error);\n  //     throw error;\n  //   }\n  // },\n\n  // הוספת משימה חדשה\n  addTask: async (name) => {\n    try {\n      const result = await apiClient.post(\"tasks\", { name, isComplete: false });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n      throw error;\n    }\n  },\n\n  // עדכון סטטוס של משימה\n  setCompleted: async (id, isComplete) => {\n    try {\n      const result = await apiClient.put(`tasks/${id}`, { isComplete });\n      return result.data;\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      throw error;\n    }\n  },\n\n  // מחיקת משימה\n  deleteTask: async (id) => {\n    try {\n      await apiClient.delete(`tasks/${id}`);\n      console.log(`Task ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      throw error;\n    }\n  },\n};\n\n\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,SAAS,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAE,KAAK,IAAK;EACT;EACAC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACE,OAAO,CAAC;EAC5D;EACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAK,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMb,SAAS,CAACc,IAAI,CAAC,OAAO,EAAE;QAAEF,IAAI;QAAEG,UAAU,EAAE;MAAM,CAAC,CAAC;MACzE,OAAOF,MAAM,CAACG,IAAI;IACpB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAW,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEH,UAAU,KAAK;IACtC,IAAI;MACF,MAAMF,MAAM,GAAG,MAAMb,SAAS,CAACmB,GAAG,CAAC,SAASD,EAAE,EAAE,EAAE;QAAEH;MAAW,CAAC,CAAC;MACjE,OAAOF,MAAM,CAACG,IAAI;IACpB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAc,UAAU,EAAE,MAAOF,EAAE,IAAK;IACxB,IAAI;MACF,MAAMlB,SAAS,CAACqB,MAAM,CAAC,SAASH,EAAE,EAAE,CAAC;MACrCX,OAAO,CAACe,GAAG,CAAC,QAAQJ,EAAE,wBAAwB,CAAC;IACjD,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}